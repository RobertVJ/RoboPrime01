import robocode.BulletHitEvent;
import robocode.BulletMissedEvent;
import robocode.HitByBulletEvent;
import robocode.HitRobotEvent;
import robocode.HitWallEvent;
import robocode.Robot;
import robocode.ScannedRobotEvent;
import java.lang.Math;
import robocode.AdvancedRobot;
public class RoboPrimeBeta01 extends Robot {
	public Estado estado;
	public long tiempoHuida;
	public int x;
	public double grados = (Math.random() * 90) + 1;
	public double numeros = (Math.random() * 100) + 1;
	public double y;	
	@Override
	public void run() {
	 estado = Estado.GIRANDO;
	 x=1;
	 while(true)
		 switch (estado) {
		 case GIRANDO:
			 turnRight(10);
			 break;
		 case DISPARANDO:
			 fire(x);
			 break;
		 case HUYENDO:
			if (numeros>40) {
				ahead( numeros);
				}
			else {
					back(numeros);
			}
			if (grados>45) {
				turnLeft(grados);
			}
			else {
				turnRight(grados);
			}
			 if (System.currentTimeMillis()-tiempoHuida>=1000) {
				 estado = Estado.GIRANDO;
			 }
			 break;
		 case MOVERSE:
			 turnGunRight(10);
			 if (numeros>40) {
					ahead( numeros);
					}
				else {
						back(numeros);
				}
				break;
		 case TORRETA:
			 turnGunRight(10);
		 }
	}
	@Override
	public void onScannedRobot(ScannedRobotEvent event) {
		estado = Estado.DISPARANDO;
	}
	@Override
	public void onBulletMissed(BulletMissedEvent event) {
		if (estado==Estado.DISPARANDO)
			estado = Estado.TORRETA;
		if (x>1) {
			x--;
		}
	}
	@Override
	public void onBulletHit(BulletHitEvent event) {
		if (x<3) {
			x++;
		}		
	}
	@Override
	public void onHitByBullet(HitByBulletEvent event) {
		y = getEnergy();
		if (y>50) {
			estado = Estado.DISPARANDO;
			estado = Estado.HUYENDO;
		}
		else 
		{
			estado = Estado.DISPARANDO;
			estado = Estado.HUYENDO;
			tiempoHuida = System.currentTimeMillis();
		}	
	}
	
	@Override
	public void onHitWall(HitWallEvent event) {
		if (estado!= Estado.HUYENDO)
			turnRight(90);
			estado = Estado.GIRANDO;
	}
	
	@Override
	public void onHitRobot(HitRobotEvent event) {
		y = getEnergy();
		if (y>50) {
			
			estado= Estado.TORRETA;
			estado = Estado.DISPARANDO;
			estado = Estado.MOVERSE;
		}
		else 
		{
			estado= Estado.TORRETA;
			estado = Estado.DISPARANDO;
			estado = Estado.HUYENDO;
			tiempoHuida = System.currentTimeMillis();
		}
	}
	enum Estado {
		GIRANDO ,
		DISPARANDO , 
		HUYENDO , 
		MOVERSE ,
		TORRETA
	}
}
